version: '3'

services:
  db:
    image: postgres
    restart: always
    networks:
      - app-network
    volumes:
      - ./database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_DB:
  app:
    build: .
    command:
    networks:
      - app-network
    ports:
      - '3000:3000'
    volumes:
      - .:/app
    depends_on:
      - db
      - kafka
    environment:
      NODE_ENV:
      TYPEORM_CONNECTION:
      TYPEORM_HOST:
      TYPEORM_PORT:
      TYPEORM_USERNAME:
      TYPEORM_DATABASE:
      TYPEORM_PASSWORD:
      TYPEORM_MIGRATIONS_RUN:
      TYPEORM_ENTITIES:
      TYPEORM_MIGRATIONS:
      TYPEORM_MIGRATIONS_DIR:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT:
    networks:
      - app-network
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID:
      KAFKA_ZOOKEEPER_CONNECT:
      KAFKA_ADVERTISED_LISTENERS:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
